resources:
# ðŸ”¹ Regla de firewall global para apps
- name: allow-8080
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/no-monoliticas/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceRanges: 
    - 0.0.0.0/0
    targetTags:
    - app-server
    allowed:
    - IPProtocol: TCP
      ports: 
      - 8080

# ðŸ”¹ Base de datos Postgres - Pagos
- name: postgres-pagos
  type: compute.v1.instance
  properties:
    zone: us-central1-c
    machineType: https://www.googleapis.com/compute/v1/projects/no-monoliticas/zones/us-central1-c/machineTypes/e2-small
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-11
    networkInterfaces:
    - network: global/networks/default
      networkIP: 10.128.0.21
    tags:
      items: [postgres]
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          apt-get update
          apt-get install -y postgresql
          sudo -u postgres psql -c "CREATE USER admin WITH PASSWORD 'admin';"
          sudo -u postgres psql -c "CREATE DATABASE pagosdb OWNER admin;"

# ðŸ”¹ App Pagos
- name: pagos-fq3n
  type: compute.v1.instance
  properties:
    zone: us-central1-c
    machineType: https://www.googleapis.com/compute/v1/projects/no-monoliticas/zones/us-central1-c/machineTypes/e2-small
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-11
    networkInterfaces:
    - network: global/networks/default
      accessConfigs: [{name: External NAT, type: ONE_TO_ONE_NAT}]
    tags:
      items: [app-server]
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt-get install -y python3-pip git
          git clone https://github.com/ddi4z/MISW4406-Reactive-Builders-Entrega4.git
          cd MISW4406-Reactive-Builders-Entrega4
          sudo apt-get install -y python3-dev libpq-dev gcc
          sudo apt install lsof -y
          pip3 install -r pagos-requirements.txt
          export PATH=$PATH:$HOME/.local/bin
          export DB_USER=admin
          export DB_PASSWORD=admin
          export DB_HOST=10.128.0.21
          export DB_PORT=5432
          export DB_NAME=pagosdb
          cd src/pagos
          uvicorn pagos.api.pagos:app --host 0.0.0.0 --port 8080

# ðŸ”¹ Base de datos Postgres - Asociaciones
- name: postgres-asociaciones
  type: compute.v1.instance
  properties:
    zone: us-central1-f
    machineType: https://www.googleapis.com/compute/v1/projects/no-monoliticas/zones/us-central1-f/machineTypes/e2-small
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-11
    networkInterfaces:
    - network: global/networks/default
      networkIP: 10.128.0.22
    tags:
      items: [postgres]
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          apt-get update
          apt-get install -y postgresql
          sudo -u postgres psql -c "CREATE USER admin WITH PASSWORD 'admin';"
          sudo -u postgres psql -c "CREATE DATABASE asociacionesdb OWNER admin;"

# ðŸ”¹ App Asociaciones
- name: asociaciones-sxtw
  type: compute.v1.instance
  properties:
    zone: us-central1-f
    machineType: https://www.googleapis.com/compute/v1/projects/no-monoliticas/zones/us-central1-f/machineTypes/e2-small
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-11
    networkInterfaces:
    - network: global/networks/default
      accessConfigs: [{name: External NAT, type: ONE_TO_ONE_NAT}]
    tags:
      items: [app-server]
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt-get install -y python3-pip git
          git clone https://github.com/ddi4z/MISW4406-Reactive-Builders-Entrega4.git
          cd MISW4406-Reactive-Builders-Entrega4
          sudo apt-get install -y python3-dev libpq-dev gcc
          sudo apt install lsof -y
          pip3 install -r requirements.txt
          export PATH=$PATH:$HOME/.local/bin
          export DB_USER=admin
          export DB_PASSWORD=admin
          export DB_HOST=10.128.0.22
          export DB_PORT=5432
          export DB_NAME=asociacionesdb
          cd src/asociaciones_estrategicas
          flask --app api:create_app --debug run --host=0.0.0.0 --port=8080

# ðŸ”¹ Base de datos Postgres - Eventos y AtribuciÃ³n
- name: postgres-eventos
  type: compute.v1.instance
  properties:
    zone: us-central1-b
    machineType: https://www.googleapis.com/compute/v1/projects/no-monoliticas/zones/us-central1-b/machineTypes/e2-small
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-11
    networkInterfaces:
    - network: global/networks/default
      networkIP: 10.128.0.23
    tags:
      items: [postgres]
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          apt-get update
          apt-get install -y postgresql
          sudo -u postgres psql -c "CREATE USER admin WITH PASSWORD 'admin';"
          sudo -u postgres psql -c "CREATE DATABASE eventosdb OWNER admin;"

# ðŸ”¹ App Eventos y AtribuciÃ³n
- name: eventos-y-atribucion-vm
  type: compute.v1.instance
  properties:
    zone: us-central1-b
    machineType: https://www.googleapis.com/compute/v1/projects/no-monoliticas/zones/us-central1-b/machineTypes/e2-small
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-11
    networkInterfaces:
    - network: global/networks/default
      accessConfigs: [{name: External NAT, type: ONE_TO_ONE_NAT}]
    tags:
      items: [app-server]
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt-get install -y python3-pip git
          git clone https://github.com/ddi4z/MISW4406-Reactive-Builders-Entrega4.git
          cd MISW4406-Reactive-Builders-Entrega4
          sudo apt-get install -y python3-dev libpq-dev gcc
          sudo apt install lsof -y
          pip3 install -r requirements.txt
          export PATH=$PATH:$HOME/.local/bin
          export DB_USER=admin
          export DB_PASSWORD=admin
          export DB_HOST=10.128.0.23
          export DB_PORT=5432
          export DB_NAME=eventosdb
          cd src/eventos_y_atribucion
          flask --app api:create_app --debug run --host=0.0.0.0 --port=8080
